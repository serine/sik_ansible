---

- name: Download samtools
  get_url:
    url=https://github.com/samtools/samtools/archive/{{version}}.tar.gz
    dest={{source_dir}}/samtools-{{version}}.tar.gz

- name: Uncompress samtools
  unarchive: 
    src: "{{ source_dir }}/samtools-{{version}}.tar.gz"
    dest: "{{ source_dir }}"
    copy: no
    creates: "{{ source_dir }}/samtools-{{version}}/README"

- name: Build and Install samtools
  shell: cd {{ source_dir }}/samtools-{{version}}; make install prefix="{{ soft_dir }}/samtools-{{version}}" HTSDIR="../htslib-{{htslib_version}}"
  args:
    creates: "{{ soft_dir }}/samtools-{{version}}/bin/samtools"

- name: Set samtools globaly
  become: "{{ slink_executable_to_user_local_bin }}"

  file:
    path: /usr/local/bin/samtools
    src: "{{ soft_dir }}/samtools-{{ version }}/bin/samtools"
    state: link
    owner: "{{ main_guy }}"
  when: slink_executable_to_user_local_bin

- name: Check for ~/.bashrc file
  stat: path={{ local_home }}/.bashrc
  register: check_bashrc

- name: Set samtools globaly throught PATH new bashrc
  template:
    src: bashrc
    dest: "{{ local_home }}/.bashrc"
  when: not check_bashrc.stat.exists and not slink_executable_to_user_local_bin

- name: Set samtools globaly throught PATH append to bashrc
  lineinfile:
    dest: "{{ local_home }}/.bashrc"
    line: "export PATH={{ soft_dir }}/{{ bin_dir }}:$PATH"
  when: check_bashrc.stat.exists and not slink_executable_to_user_local_bin

  tags: samtools
