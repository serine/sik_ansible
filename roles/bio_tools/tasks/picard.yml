---

- name: Download Picard
  get_url:
    url=https://github.com/broadinstitute/picard/releases/download/{{version}}/picard-tools-{{version}}.zip
    dest={{source_dir}}/picard-tools-{{version}}.zip

- name: Uncompress Picard
  unarchive: 
    src: "{{ source_dir }}/picard-tools-{{version}}.zip"
    dest: "{{ soft_dir }}"
    copy: no
    creates: "{{ soft_dir }}/picard-tools-{{version}}/picard.jar"

- file: dest="{{ soft_dir }}/picard-tools-{{version}}/bin" state=directory mode=0755

- name: Picard wrapper script
  template:
    src: java-wrapper.sh.j2
    dest: "{{ soft_dir }}/picard-tools-{{version}}/bin/picard"
    owner: "{{ main_guy }}"
    mode: 0755
  with_items:
    - { jar: '{{ soft_dir }}/picard-tools-{{version}}/picard.jar' }

- name: Set picard tools globaly throught /usr/local/bin
  become: "{{ slink_executable_to_user_local_bin }}"

  file:
    path: /usr/local/bin/picard
    src: "{{ soft_dir }}/picard-tools-{{ version }}/bin/picard"
    state: link
    owner: "{{ main_guy }}"
  when: slink_executable_to_user_local_bin

- name: Check for ~/.bashrc file
  stat: path={{ local_home }}/.bashrc
  register: check_bashrc

- name: Set picard tools globaly throught PATH new bashrc
  template:
    src: bashrc
    dest: "{{ local_home }}/.bashrc"
  when: not check_bashrc.stat.exists and not slink_executable_to_user_local_bin

- name: Set picard tools globaly throught PATH append to bashrc
  lineinfile:
    dest: "{{ local_home }}/.bashrc"
    line: "export PATH={{ soft_dir }}/{{ bin_dir }}:$PATH"
  when: check_bashrc.stat.exists and not slink_executable_to_user_local_bin

  tags: picard
